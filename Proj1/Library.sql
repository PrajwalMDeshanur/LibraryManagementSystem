create database LIBRARYDB3;
use LIBRARYDB3

create table PUBLISHER(
P_ID numeric Primary key,
P_NAME varchar(255) not null unique,
P_EMAIL varchar(255));

create table AUTHOR(
A_ID numeric primary key,
A_NAME varchar(255) not null unique,
A_GENDER CHAR(1),
A_NATIONALITY VARCHAR(50),
A_DOB DATE);

Create table CATEGORY(
C_ID numeric Primary key,
C_NAME varchar(50) not null unique,
PAR_CAT Numeric,
Foreign key(PAR_CAT) references CATEGORY(C_ID));

Create table BOOK(
B_ID numeric primary key,
B_TITLE varchar(40) not null unique,
B_LANGUAGE varchar(50),
P_ID numeric,
PUB_YEAR numeric,
TRANS_OF numeric,
foreign key(TRANS_OF) references BOOK(B_ID),
foreign key(P_ID) references PUBLISHER(P_ID));


Create table BOOK_AUTHOR(
A_ID numeric,
B_ID numeric,
POS numeric,
primary key(A_ID,B_ID),
foreign key(A_ID) references AUTHOR(A_ID),
foreign key(B_ID) references BOOK(B_ID));


Create table BOOK_CATEGORY(
C_ID numeric,
B_ID numeric,
primary key(C_ID,B_ID),
foreign key(C_ID) references CATEGORY(C_ID),
foreign key(B_ID) references BOOK(B_ID));

Create table SUBSCRIBER(
SUB_ID numeric Primary key,
SUB_NAME varchar(50) unique,
SUB_CONTACT varchar(15), 
SUB_ADD varchar(255)
);


create table BOOK_COPY(
BC_ID numeric primary key,
B_ID NUMERIC,
BC_PRICE NUMERIC,
BC_PER_DATE  DATE,
FOREIGN KEY(B_ID) REFERENCES BOOK(B_ID));


create table BORROWED(
BC_ID numeric,
SUB_ID numeric,
ISSUE_DATE date,
RETURN_DATE date,
primary key(BC_ID,SUB_ID),
foreign key(BC_ID) references BOOK_COPY(BC_ID),
foreign key(SUB_ID) references SUBSCRIBER(SUB_ID));



CREATE TABLE CLAIMED(
B_ID NUMERIC,
SUB_ID NUMERIC,
CLAIMED_DATE DATE,
PRIMARY KEY(B_ID,SUB_ID),
FOREIGN KEY(B_ID) REFERENCES BOOK(B_ID),
FOREIGN KEY(SUB_ID) REFERENCES SUBSCRIBER(SUB_ID));



INSERT INTO PUBLISHER(P_ID, P_NAME, P_EMAIL) VALUES (1, 'McGraw-Hill','editor@mcgh.com');
INSERT INTO PUBLISHER(P_ID, P_NAME, P_EMAIL) VALUES (2, 'HarperCollins', 'contact@harper-collins.com');
INSERT INTO PUBLISHER(P_ID, P_NAME, P_EMAIL) VALUES (3, 'Sri Ramana Ashram', NULL);
INSERT INTO PUBLISHER(P_ID, P_NAME, P_EMAIL) VALUES (4, 'Advaita Ashrama', NULL);
INSERT INTO PUBLISHER(P_ID, P_NAME, P_EMAIL) VALUES (5, 'Jaico Publishing House', 'info@jaico.com');
INSERT INTO PUBLISHER(P_ID, P_NAME, P_EMAIL) VALUES (6, 'Wiley Publishers', 'info@wiley.in');



INSERT INTO AUTHOR VALUES (1, 'AVI SILBERSCHATZ', 'M', 'USA', '1960-01-01');
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (2,'HENRY KORTH', 'M', 'USA', '1964-02-02');
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (3, 'S.SUDARSHAN', 'M', 'INDIAN', '1965-09-30');
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (4, 'SWAMI RANGANATHANANDA', 'M', 'INDIAN', '1908-12-15');
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (5, 'ROBIN SHRAMA', 'M', 'CANADIAN', '1964-06-16');
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (6, 'RAMAN MAHARSHI', 'M', 'INDIAN', '1879-12-30');
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (7, 'RASHMI BANSAL', 'F', 'INDIAN', NULL);
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (8, 'SIMON SINGH', 'F', 'UK', '1964-09-19');
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (9, 'FRANK M. WHITE', 'M', 'USA', NULL);
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (10, 'SISTER NIVEDITA', 'F', 'UK', '1867-10-28');
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (11, 'PETER GALVIN', 'M', 'USA', '1868-05-22');
INSERT INTO AUTHOR(A_ID, A_NAME, A_GENDER, A_NATIONALITY, A_DOB) VALUES (12, 'GREG GAGNE', 'M', 'USA', '1871-03-15');


INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (100000, 'BOOK_CATEGORIES', NULL);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (10000, 'TECHNICAL', 100000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (10001, 'COMPUTER SCIENCE', 10000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (10002, 'MATHEMATICS', 10000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (10003, 'MECHANICAL', 10000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (10004, 'ELECTRICAL', 10000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (20000, 'PHYLISOPHY', 100000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (20001, 'MOTIVATIONAL', 20000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (20002, 'SPIRITUAL', 20000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (30000, 'NOVEL', 100000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (30001, 'FICTION', 30000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (30002, 'DRAMA', 30000);
INSERT INTO CATEGORY(C_ID, C_NAME, PAR_CAT) VALUES (40000, 'HISTORICAL', 100000);



INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (9780072958867, 'Database System Concepts', 'ENGLISH', NULL, 1, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (9788186617762, 'My India My People', 'ENGLISH', NULL, 3, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (888888888888, 'Stay Hungry Stay Foolish', 'ENGLISH', NULL, NULL, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (999999999999, 'I Have a Dream', 'ENGLISH', NULL, NULL, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (444333222, 'The Monk Who Sold His Ferrari', 'ENGLISH', NULL, 5, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (555333222, 'Ferrari Maarida Fakira', 'KANNADA', NULL, 5, 444333222);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (111333222, 'Operating System Concepts', 'ENGLISH', NULL, 6, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (555333223, 'Operating System Concepts (German)', 'GERMAN', NULL, 5, 111333222);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (666333223, 'Operating System Concepts (Chinese)', 'CHINISE', NULL, 6, 111333222);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (777333223, 'Fermat’s Last Theorem', 'ENGLISH', NULL, 2, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (888333222, 'Who Am I', 'ENGLISH', NULL, 3, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (444222111, 'Science and Religion', 'ENGLISH', NULL, 4, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (777444111, 'Fluid Mechanics', 'ENGLISH', NULL, 2, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (222444000, 'Mobile Computing', 'ENGLISH', NULL, NULL, NULL);
INSERT INTO BOOK(B_ID, B_TITLE, B_LANGUAGE, PUB_YEAR, P_ID, TRANS_OF) VALUES (555444333, 'Role And Responsibility Of Teachers In Building Up Modern India', 'ENGLISH', NULL, 4, NULL);




INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (1, 9780072958867, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (2, 9780072958867, 2);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (3, 9780072958867, 3);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (10, 9788186617762, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (7, 888888888888, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (7, 999999999999, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (5, 444333222, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (5, 555333222, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (1, 111333222, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (11, 111333222, 2);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (12, 111333222, 3);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (1, 555333223, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (11, 555333223, 2);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (12, 555333223, 3);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (1, 666333223, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (11, 666333223, 2);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (12, 666333223, 3);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (8, 777333223, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (6, 888333222, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (4, 444222111, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (9, 777444111, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (2, 222444000, 1);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (9, 222444000, 2);
INSERT INTO BOOK_AUTHOR(A_ID, B_ID, POS) VALUES (4, 555444333, 1);



INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (10001, 9780072958867);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (10002, 9780072958867);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (20000, 9788186617762);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (40000, 9788186617762);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (20001, 888888888888);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (20001, 999999999999);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (20001, 444333222);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (30001, 444333222);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (20001, 555333222);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (30001, 555333222);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (10001, 111333222);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (10001, 555333223);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (10001, 666333223);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (10002, 777333223);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (40000, 777333223);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (30000, 777333223);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (20002, 888333222);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (20000, 444222111);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (10003, 777444111);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (10000, 222444000);
INSERT INTO BOOK_CATEGORY(C_ID, B_ID) VALUES (20001, 555444333);



INSERT SUBSCRIBER(SUB_ID, SUB_NAME, SUB_CONTACT, SUB_ADD) VALUES (1, 'Hrishikesh Karmarkar', 9899998990, 'Fern Gardens, Mahim, Mumbai');
INSERT SUBSCRIBER(SUB_ID, SUB_NAME, SUB_CONTACT, SUB_ADD) VALUES (2, 'Vipul Shah', 9904599045, 'Powai, Mumbai');
INSERT SUBSCRIBER(SUB_ID, SUB_NAME, SUB_CONTACT, SUB_ADD) VALUES (3, 'Minarli Mathur', 9704544444, 'Sea-side avenue, Bandra, Mumbai');
INSERT SUBSCRIBER(SUB_ID, SUB_NAME, SUB_CONTACT, SUB_ADD) VALUES (4, 'Suparna Deshpande', 8308383083, NULL);
INSERT SUBSCRIBER(SUB_ID, SUB_NAME, SUB_CONTACT, SUB_ADD) VALUES (5, 'S.SUDARSHAN', 6788867888, 'Juhu, Mumbai');


INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1134, 9780072958867, 450, '2018-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1135, 9780072958867, 450, '2018-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1150, 9780072958867, 600, '2020-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1151, 9780072958867, 600, '2020-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1152, 9780072958867, 600, '2020-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1153, 9780072958867, 600, '2020-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1281, 9788186617762, 50, '2011-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1295, 888888888888, 250, '2012-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1355, 555333222, 250, '2015-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1356, 555333222, 250, '2015-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1357, 555333222, 250, '2015-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1358, 555333222, 250, '2015-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1359, 555333222, 250, '2015-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1420, 111333222, 650, '2010-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1421, 111333222, 650, '2010-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1422, 111333222, 650, '2010-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1423, 111333222, 650, '2010-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1424, 111333222, 650, '2010-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1425, 111333222, 650, '2010-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1615, 555333223, 700, '2010-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1719, 777333223, 450, '2016-01-01');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1759, 888333222, 280, '2017-03-03');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1854, 444222111, 40, '2017-03-03');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1855, 444222111, 40, '2017-03-03');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1910, 777444111, 1250, '2015-05-03');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1911, 777444111, 1250, '2015-05-03');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1912, 777444111, 1600, '2020-05-03');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (1913, 777444111, 1600, '2020-05-03');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (2002, 555444333, 125, '2010-05-03');
INSERT BOOK_COPY(BC_ID, B_ID, BC_PRICE, BC_PER_DATE) VALUES (2003, 555444333, 250, '2020-05-05');

INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1295, 1, '2022-01-01', '2022-01-14');
INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1134, 5, '2022-05-01', NULL);
INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1719, 1, '2022-01-10', '2022-01-28');
INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1913, 2, '2022-05-01', NULL);
INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1615, 3, '2022-01-01', '2022-01-05');
INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1759, 2, '2022-05-04', NULL);
INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1281, 3, '2022-01-01', NULL);
INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1355, 5, '2022-05-10', NULL);
INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1854, 3, '2022-05-10', NULL);
INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1855, 2, '2022-05-12', NULL);
INSERT BORROWED(BC_ID, SUB_ID, ISSUE_DATE, RETURN_DATE) VALUES (1153, 5, '2022-05-01', NULL);



INSERT CLAIMED(B_ID, SUB_ID, CLAIMED_DATE) VALUES(444222111, 1, '2022-05-20');
INSERT CLAIMED(B_ID, SUB_ID, CLAIMED_DATE) VALUES(444222111, 5, '2022-05-22');


DROP TABLE BORROWED;
DROP TABLE BOOK_CATEGORY;
drop table CATEGORY;
drop table CLAIMED;
drop table BOOK_COPY;
drop table SUBSCRIBER;
drop table BOOK_AUTHOR;
drop table AUTHOR;
drop table BOOK;
drop table PUBLISHER;


SELECT DISTINCT P.P_NAME
FROM PUBLISHER P, BOOK B, BOOK_AUTHOR BA, AUTHOR A, BOOK_CATEGORY BCAT, CATEGORY C, BOOK_COPY BCOPY, BORROWED BORR, SUBSCRIBER S
WHERE P.P_ID = B.P_ID AND
	  B.B_ID = BA.B_ID AND
	  BA.A_ID = A.A_ID AND
	  BCAT.B_ID = B.B_ID AND
	  BCAT.C_ID = C.C_ID AND
	  BCOPY.B_ID = B.B_ID AND
	  BORR.BC_ID = BCOPY.BC_ID AND
	  BORR.SUB_ID = S.SUB_ID AND
	  S.SUB_NAME = A.A_NAME AND
	  C.C_NAME = 'COMPUTER SCIENCE';



----1 phase
USE Librarydb;
 /*1.List titles of all the books published by the publisher with pid=1*/
 SELECT B.B_TITLE
 FROM BOOK B
 WHERE B.P_ID = 1;

 /*2.List all the attributes (columns) of authors who are either Indian or British.*/
 SELECT *
 FROM AUTHOR A
 WHERE A.A_NATIONALITY = 'INDIAN' OR A.A_NATIONALITY = 'UK';

 /*3.List the name and date of birth of all Indian female authors.*/
 SELECT A.A_NAME, A.A_DOB
 FROM AUTHOR A
 WHERE A.A_GENDER = 'F' AND A.A_NATIONALITY = 'INDIAN';

/*4.List the name and nationality of all authors who are NOT Indian.*/
SELECT A.A_NAME, A.A_NATIONALITY
FROM AUTHOR A
WHERE A.A_NATIONALITY != 'INDIAN';

/*5.List the tax paid on each book copy. Tax paid = purchase price*5/105*/
SELECT BC.BC_ID, (BC.BC_PRICE*5)/105 AS TAX_PAID
FROM BOOK_COPY BC;

/*6.List the names of all top-level categories (top level categories do not have a parent category). In the result, the column should be named as “Top Level Category”.*/
SELECT C.C_NAME AS TOP_LEVEL_CATEGORIES
FROM CATEGORY C
WHERE C.PAR_CAT IS NULL; /*IN MY DATABASE THE TOP LEVEL CATEGORY IS BOOKCATEGORY WHICH DO NOT HAVE ANY PARENT CATEGORY*/

/*7.Find the number (count) of books that are not in English. Name the result column as “Non-English Book Count”.*/
SELECT COUNT(B.B_ID) AS NON_ENGLISH_BOOK_COUNT
FROM BOOK B
WHERE B.B_LANGUAGE ! = 'ENGLISH';

/*8.Find the maximum and minimum of the purchase prices (any copy any book).*/
SELECT BC.B_ID, MAX(BC.BC_PRICE) AS MAX_PUR_PRICE, MIN(BC.BC_PRICE) AS MIN_PUR_PRICE
FROM BOOK_COPY BC
GROUP BY BC.B_ID;

/*9.List the names of authors born before 1/1/1950.*/
SELECT A.A_NAME, A.A_DOB
FROM AUTHOR A
WHERE A.A_DOB < '1950-01-01';

/*10.List the names of subscribers who have at least one book with them (issued but not returned). Will you get duplicate names? Fix it.*/
SELECT DISTINCT S.SUB_NAME
FROM SUBSCRIBER S, BORROWED BOR
WHERE S.SUB_ID = BOR.SUB_ID AND BOR.RETURN_DATE IS NULL;

/*11.List the ids of all books which have at least one copy purchased for more than Rs.500. Will your query print the same bookid multiple times? How will you fix it?*/
SELECT DISTINCT BC1.B_ID
FROM BOOK_COPY BC1
WHERE BC1.BC_PRICE > 500;
--------------------OR-----------------------
SELECT BC1.B_ID
FROM BOOK_COPY BC1, BOOK_COPY BC2
WHERE BC1.B_ID = BC2.B_ID AND BC1.BC_PRICE > 500
GROUP BY BC1.B_ID;

/*12.Find the names and email ids of publishers of Kannada books.*/
SELECT P.P_NAME, P.P_EMAIL
FROM BOOK B, PUBLISHER P
WHERE B.P_ID = P.P_ID AND B.B_LANGUAGE = 'KANNADA';

/*13.Find the name, mobile number and address of subscribers who have taken a book but not returned. In the result each mobile number should be prefixed with ‘Ph:’.*/
SELECT DISTINCT S.SUB_NAME, CONCAT('PH :', S.SUB_CONTACT) AS CONTACT
FROM SUBSCRIBER S, BORROWED BOR
WHERE S.SUB_ID = BOR.SUB_ID AND BOR.RETURN_DATE IS NULL;

/*14.Find the titles of all books that belong to either “Computer Science” category.*/
SELECT B.B_TITLE
FROM BOOK_CATEGORY BCAT, CATEGORY C, BOOK B
WHERE BCAT.C_ID = C.C_ID AND C.C_NAME = 'COMPUTER SCIENCE' AND BCAT.B_ID = B.B_ID;

/*15.List the titles of books written by at least one female author.*/
SELECT B.B_TITLE
FROM BOOK_AUTHOR BA, AUTHOR A, BOOK B
WHERE A.A_GENDER = 'F' AND BA.A_ID = A.A_ID AND BA.B_ID = B.B_ID;

/*16.List all the author names as Mr. <aname> or Ms. <aname> depending on the gender. You may use the CASE expression and concatenation operation in the SELECT clause. Your result should have a single column named “Author Name”.*/
SELECT CONCAT('Mr.', A1.A_NAME) AS AUTHOR_NAME FROM AUTHOR A1 WHERE A1.A_GENDER = 'M'
UNION
SELECT CONCAT('Ms.', A2.A_NAME) FROM AUTHOR A2 WHERE A2.A_GENDER = 'F';
--------------------------------------------OR-------------------------------------
SELECT
  CASE 
     WHEN A.A_GENDER = 'M' THEN CONCAT('Mr.', A.A_NAME)
	 ELSE CONCAT('Ms.', A.A_NAME)
  END AS AUTHOR_NAME
FROM AUTHOR A;

/*17.UPDATE the nationality of all “Indian” authors, to make it INDIAN (capitalize).*/
UPDATE AUTHOR SET A_NATIONALITY = 'INDIAN' WHERE A_NATIONALITY = 'Indian';

/*18.UPDATE the BOOKCOPY table to increase the purchase price of all copies by 10%*/
UPDATE BOOK_COPY SET BC_PRICE = BC_PRICE + BC_PRICE*0.1;


/*19.Add a new column called AADHAAR to the SUBSCRIBER table. Then, update all the rows of the SUBSCRIBER table to set the AADHAAR column same as the mobile number of that subscriber.*/
ALTER TABLE SUBSCRIBER ADD AADHAAR NUMERIC;
UPDATE SUBSCRIBER SET AADHAAR = SUB_CONTACT;

/*20.Delete all book issue records where the issue was made before 5th Jan 2022 and the book has been returned back. RE-INSERT these records back. (Note them down before deleting and insert them back).*/
DELETE FROM BORROWED WHERE ISSUE_DATE <'2022-01-05' AND RETURN_DATE IS NOT NULL;


--phase 2

/*1.Show the title and publisher’s name for books whose publisher has the word ‘Ashram’ in the name. 
You can use the LIKE predicate.*/
SELECT P.P_NAME, B.B_TITLE
FROM PUBLISHER P, BOOK B	
WHERE P.P_NAME LIKE '%Ashram%' AND P.P_ID = B.P_ID;

/*2.List the names of authors whose date of birth is known (not null).*/
SELECT A.A_NAME
FROM AUTHOR A
WHERE A.A_DOB IS NOT NULL;

/*3.List all the books in the “Technical” category (note that you need to consider all the sub-categories of “Technical”)*/
SELECT DISTINCT B.B_TITLE
FROM CATEGORY C1 JOIN CATEGORY C2 ON C1.C_ID = C2.PAR_CAT 
JOIN BOOK_CATEGORY BC ON BC.C_ID = C2.C_ID OR BC.C_ID = C1.C_ID JOIN BOOK B ON B.B_ID = BC.B_ID
WHERE C1.C_NAME = 'TECHNICAL';

/*4.List the copy id and subscriber id where the copy has been kept by the subscriber for more than 15 days and not yet returned.
Read about: GETDATE() and DIFFDATE() functions of SQL Server.*/
SELECT * FROM BORROWED 
SELECT BR.BC_ID, BR.SUB_ID FROM BORROWED BR
WHERE DATEDIFF(DAY, BR.ISSUE_DATE, GETDATE()) > 15 AND BR.RETURN_DATE IS NULL;

/*5.List the book titles that have been taken by both Minarli Mathur and Vipul Shah.*/
SELECT S.SUB_NAME, B.B_TITLE
FROM BORROWED BOR, SUBSCRIBER S, BOOK B, BOOK_COPY BC
WHERE BOR.SUB_ID = S.SUB_ID AND S.SUB_NAME = 'Minarli Mathur' AND BC.B_ID = B.B_ID AND BC.BC_ID = BOR.BC_ID
INTERSECT
SELECT S.SUB_NAME, B.B_TITLE
FROM BORROWED BOR, SUBSCRIBER S, BOOK B, BOOK_COPY BC
WHERE BOR.SUB_ID = S.SUB_ID AND S.SUB_NAME = 'Vipul Shah' AND BC.B_ID = B.B_ID AND BC.BC_ID = BOR.BC_ID;

/*6.List the titles of books that have no Indian author.*/
SELECT B.B_TITLE FROM BOOK B
EXCEPT
SELECT B.B_TITLE
FROM BOOK_AUTHOR BA LEFT JOIN AUTHOR A ON BA.A_ID = A.A_ID LEFT JOIN BOOK B ON B.B_ID = BA.B_ID
WHERE A.A_NATIONALITY = 'INDIAN';

/*7.For each book, show the title, number of copies and the total purchase price of all its copies.
Books that have no copies should also be part of the result.*/
SELECT B.B_TITLE, COUNT(BC.BC_ID) AS NUM_OF_COPIES, SUM(BC.BC_PRICE) AS TOTAL_PRICE
FROM BOOK B LEFT JOIN BOOK_COPY BC ON B.B_ID = BC.B_ID
GROUP BY BC.B_ID, B.B_TITLE;

/*8.List the subscribers, with their names and phone numbers, who have returned all the books issued to them (subscribers with nothing to return).*/

SELECT S.SUB_NAME FROM SUBSCRIBER S
EXCEPT 
SELECT S.SUB_NAME
FROM SUBSCRIBER S JOIN BORROWED BR ON S.SUB_ID = BR.SUB_ID
WHERE BR.RETURN_DATE IS NULL

SELECT S.SUB_NAME FROM SUBSCRIBER S WHERE S.SUB_ID NOT IN (SELECT BR.SUB_ID FROM BORROWED BR WHERE BR.RETURN_DATE IS NULL);

/*9.List the authors who have written more than two books.*/
SELECT A.A_ID, A.A_NAME, COUNT(B.B_ID) AS BOOKS_WRITTEN
FROM AUTHOR A JOIN BOOK_AUTHOR BA ON BA.A_ID = A.A_ID JOIN BOOK B ON B.B_ID = BA.B_ID
GROUP BY A.A_ID, A.A_NAME
HAVING(COUNT(B.B_ID)>2);

SELECT A.A_NAME FROM AUTHOR A
WHERE 2 < (SELECT COUNT(BA.B_ID) FROM BOOK_AUTHOR BA
							     WHERE BA.A_ID = A.A_ID);
/*10.List the authors who have written at least one book that is translated to two or more languages.*/
SELECT A.A_NAME 
FROM AUTHOR A 
WHERE A.A_ID IN (SELECT BA.A_ID
                 FROM BOOK_AUTHOR BA JOIN BOOK B ON BA.B_ID = B.B_ID
				 GROUP BY B.TRANS_OF, BA.A_ID
				 HAVING COUNT(B.TRANS_OF)+1 >= 2);

SELECT A.A_NAME
FROM AUTHOR A;



--phase 3

/*1.List the author(s) who have written the maximum number of books.*/

SELECT A.A_NAME, COUNT(BA.B_ID) AS BOOK_COUNT
FROM BOOK_AUTHOR BA 
JOIN AUTHOR A ON BA.A_ID = A.A_ID
GROUP BY A.A_NAME, A.A_ID
HAVING COUNT(BA.B_ID) = 
(SELECT MAX(BOOK_COUNT) AS BOOK_COUNT
    FROM (
        SELECT COUNT(BA.B_ID) AS BOOK_COUNT
        FROM BOOK_AUTHOR BA 
        GROUP BY BA.A_ID
) AS BC2);

/*2.List the titles of books that have less than two (1 or 0) copies left in the library unissued.*/
SELECT B.B_TITLE, B.B_ID
FROM BOOK B 
JOIN BOOK_COPY BC ON B.B_ID = BC.B_ID
LEFT JOIN BORROWED BR ON BR.BC_ID = BC.BC_ID AND BR.RETURN_DATE IS NULL
GROUP BY B.B_TITLE, B.B_ID
HAVING COUNT(BC.B_ID) - COUNT(BR.BC_ID) < 2;

/*3.List the subscribers who had the book ‘Science and Religion’ with them on any day between May 1, 2022 and May 20, 2022.*/
SELECT S.SUB_NAME FROM SUBSCRIBER S, BORROWED BR, BOOK_COPY BC, BOOK B
WHERE S.SUB_ID = BR.SUB_ID AND BC.BC_ID = BR.BC_ID AND B.B_ID = BC.B_ID AND B.B_TITLE = 'Science and Religion'
AND BR.ISSUE_DATE >= '2022-05-01' AND BR.ISSUE_DATE <= '2022-05-20';
